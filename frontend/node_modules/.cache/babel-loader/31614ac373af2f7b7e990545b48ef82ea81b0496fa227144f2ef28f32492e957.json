{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\New folder\\\\automations_technical_assessment - Copy\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\notion.js\",\n  _s = $RefreshSig$();\n// notion.js\n\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotionIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to connect to Notion using internal integration token\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      await axios.post(`http://localhost:8000/integrations/notion/authorize`, formData);\n\n      // Get credentials immediately since we're using internal integration\n      const credentialsResponse = await axios.post(`http://localhost:8000/integrations/notion/credentials`, formData);\n      const credentials = credentialsResponse.data;\n      if (credentials) {\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Notion'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: isConnected ? () => {} : handleConnectClick,\n          color: isConnected ? 'success' : 'primary',\n          disabled: isConnecting,\n          style: {\n            pointerEvents: isConnected ? 'none' : 'auto',\n            cursor: isConnected ? 'default' : 'pointer',\n            opacity: isConnected ? 1 : undefined\n          },\n          children: isConnected ? 'Notion Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 72\n          }, this) : 'Connect to Notion'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(NotionIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = NotionIntegration;\nvar _c;\n$RefreshReg$(_c, \"NotionIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","NotionIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","post","credentialsResponse","credentials","data","prev","type","e","_e$response","_e$response$data","alert","response","detail","children","sx","mt","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/New folder/automations_technical_assessment - Copy/integrations_technical_assessment/frontend/src/integrations/notion.js"],"sourcesContent":["// notion.js\n\nimport { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    CircularProgress\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const NotionIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    // Function to connect to Notion using internal integration token\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            await axios.post(`http://localhost:8000/integrations/notion/authorize`, formData);\n            \n            // Get credentials immediately since we're using internal integration\n            const credentialsResponse = await axios.post(`http://localhost:8000/integrations/notion/credentials`, formData);\n            const credentials = credentialsResponse.data;\n            \n            if (credentials) {\n                setIsConnected(true);\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'Notion' }));\n            }\n            setIsConnecting(false);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    useEffect(() => {\n        setIsConnected(integrationParams?.credentials ? true : false)\n    }, []);\n\n    return (\n        <>\n        <Box sx={{mt: 2}}>\n            Parameters\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{mt: 2}}>\n                <Button \n                    variant='contained' \n                    onClick={isConnected ? () => {} : handleConnectClick}\n                    color={isConnected ? 'success' : 'primary'}\n                    disabled={isConnecting}\n                    style={{\n                        pointerEvents: isConnected ? 'none' : 'auto',\n                        cursor: isConnected ? 'default' : 'pointer',\n                        opacity: isConnected ? 1 : undefined\n                    }}\n                >\n                    {isConnected ? 'Notion Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to Notion'}\n                </Button>\n            </Box>\n        </Box>\n      </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}